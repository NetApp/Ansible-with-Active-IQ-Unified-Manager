- hosts: localhost
# Make sure NSLM credentials are updated in nslm_credentials.yml file before trying this playbook
  vars_files: nslm_credentials.yml
  vars:
      psl: <performance_service_level>
      cluster: <cluster_name>
      svm: <svm_name>
      state: present # Possible values are present,absent
      lunname: <lun_name>
      lunsize: <lun_size_in_mb>
      lunostype: WINDOWS # Possible values are AIX,HPUX,HYPER_V,LINUX,NETWARE,OPENVMS,SOLARIS,SOLARIS_EFI,VMWARE,WINDOWS,WINDOWS_2008,WINDOWS_GPT,XEN
      igroup: <igroup_name>
      initiators: <initiators>
      igroupostype: WINDOWS # Possible values are AIX,HPUX,HYPER_V,LINUX,NETWARE,OPENVMS,SOLARIS,VMWARE,WINDOWS,DEFAULT,XEN
      igrouptype: mixed # Possible values are fcp,iscsi,mixed

  tasks:
    - name: Create initiator group for the host
      nslm_igroups:
        state={{ state }}
        hostip={{ nslmIP }}
        port={{ nslmPort }}
        user={{ nslmUser }}
        password={{ nslmPassword }}
        name={{ igroup }}
        cluster={{ cluster }}
        svm={{ svm }}
        os_type={{ igroupostype }}
        initiators={{ initiators }}
        type={{ igrouptype }}
      when: state == "present"
      no_log: true
      register: igroupCreate

    - name: Print the igroup post or patch response
      debug: msg="Creation/Updation of initiator group {{igroupCreate}}"
      when: state == "present"

    - name: Create a LUN with specified Performance Service Level by the name
      nslm_luns:
        state={{ state }}
        hostip={{ nslmIP }}
        port={{ nslmPort }}
        user={{ nslmUser }}
        password={{ nslmPassword }}
        cluster={{ cluster }}
        svm={{ svm }}
        performance_service_level={{ psl }}
        name={{ lunname }}
        capacity={{ lunsize }}
        igroup={{ igroup }}
        os_type={{ lunostype }}
      no_log: true
      register: lunCreate

    - name: Print the lun job key
      debug: msg="Creation/Updation of LUN in specified PSL {{lunCreate["meta"]["state"]}}"
      when: state == "present"

    - name: Delete an igroup if state is absent
      nslm_igroups:
        state={{ state }}
        hostip={{ nslmIP }}
        port={{ nslmPort }}
        user={{ nslmUser }}
        password={{ nslmPassword }}
        name={{ igroup }}
        cluster={{ cluster }}
        svm={{ svm }}
      no_log: true
      when: state == "absent"
      register: igroupDelete

    - name: Print the igroup post response
      debug: msg="{{igroupDelete}}"
      when: state == "absent"
